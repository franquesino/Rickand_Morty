{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Proyectos Rick\\\\1intentointegrador\\\\rick_and_morty\\\\front\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport styles from './SearchBar.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(_ref) {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  const [character, setCharacter] = useState('');\n  const handleChange = event => {\n    setCharacter(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.searchbar,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      value: character,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSearch(character),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n//esto consistió en arriba cambiar props por onSearch desestructurando\n//luego abajo en onClick se establece la funcion onSearch\n//la cual no la ejecutamos, solo se ejecuta al cumplirse el click\n_s(SearchBar, \"pv9IsLL1os8EqJDWV1vNc0qPYrI=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["styles","useState","jsxDEV","_jsxDEV","SearchBar","_ref","_s","onSearch","character","setCharacter","handleChange","event","target","value","className","searchbar","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/Proyectos Rick/1intentointegrador/rick_and_morty/front/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import styles from './SearchBar.module.css'\r\nimport { useState } from 'react';\r\n\r\nexport default function SearchBar({onSearch}) {\r\n\r\n   const [character, setCharacter] = useState('')\r\n   const handleChange = (event) => {\r\n      setCharacter(event.target.value)\r\n   }\r\n\r\n\r\n   return (\r\n      <div className={styles.searchbar}>\r\n         <input type='search' value={character} onChange={handleChange}   />\r\n      <button onClick={() => onSearch(character)}>Agregar</button>\r\n      </div>\r\n   );\r\n}\r\n//esto consistió en arriba cambiar props por onSearch desestructurando\r\n//luego abajo en onClick se establece la funcion onSearch\r\n//la cual no la ejecutamos, solo se ejecuta al cumplirse el click"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAEzC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC7BF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAGD,oBACGV,OAAA;IAAKW,SAAS,EAAEd,MAAM,CAACe,SAAU;IAAAC,QAAA,gBAC9Bb,OAAA;MAAOc,IAAI,EAAC,QAAQ;MAACJ,KAAK,EAAEL,SAAU;MAACU,QAAQ,EAAER;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtEnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACC,SAAS,CAAE;MAAAQ,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtD;AAEZ;AACA;AACA;AACA;AAAAhB,EAAA,CAjBwBF,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}